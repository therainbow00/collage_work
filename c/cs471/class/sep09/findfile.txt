
1. Find the superblock
     a. starts at 1024
     b. inode size at 1024 + 88 == 1112 (2 bytes)
     c. the bytes are 00 01 = 0x0100 = 256
2. Find first block group descriptor table
     a. start at 2048
     b. find block bitmap, inode bitmap, inode table
     c. answers: 3, 4 and 5
     d. bitmap table: ff ff ff 7f 00 00 ..
        bin: 1111 1111  1111 1111  1111 1111 1111 1110
        first free block is the 32nd (block number 31)
3. Go to the inode, find the inode for root directory:
     a. we want the second inode (inode number 1)
     b. first two byte are permissions:
          0x41ed == 0100 0001 1110 1101
                     d      r wxrw xrwx

          ls -l would show: drwxr-xr-x

     c. we want the block number for the content of the root directory
     d. at inode + 40 we found the 4-byte value 13
     e. so block contains the content of the root dir
4. Go to block 13
     a. first directory entry is a link from the root dir to itself (named ".")
        record length was 12
     b. second directory entry is a link from the root dir to itself (named "..")
        record length was 12
     c. third directory entry: inode number 11, record length 0x14 = 20,
        length of name = 10, type item = 2 = directory, name = lost+found
     d. fourth directory entry (begins at byte 13312 + 12 + 12 + 20)
        inode number = 12, record length = 16, name length = 8, type = file
        name of file = "datafile"
     e. I want to know the content of the file, so go to inode 12
     f. which is at 5*1024 + 256*11 = 7936
5.  Go address 7936 for the inode of datafile
     a. To find the data blocks for the file, go to byte 40 of the inode and
        find block 0x1b == block 27.
     b. block 27 is at address 27*1024  = 27648.  We need to use larger dump in
        /u1/junk/cs471/sep07/chardump.txt, the dump is a character dump
        where I replaced "-t x1" by "-c".
     c. Go to address 27648 and find the ascii for the text in the file.

