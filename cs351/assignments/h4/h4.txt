CS351 Assignment #4	10 points

Add your answers to this file. Attempt to convert the code snippets to assembly.
Refer lessons and to the asm.pdf handout for instructions and the templates for
guidance:

1) (3pts) Make a system call for:
      chmod(path, mode);
   where path is the address of a string and mode is the _address_ of an
   integer. The prototype for the chmod function is:
      int chmod(char *path, int mode);
   chmod is system call number 90. Both path and mode are already defined for
   you and remember that both are labels that represent an address:









2) (2pts) Convert the following to X86_64 assembly.  Reminder that "r##"
   represent X86_64 registers:
   r15 = 0;
   r14 = 20;
   r13 = r15;
   r13 = r13 + r14;
   r14--;

   mov r15, 0;
   mov r14, 20;
   mov temp, [r15];





3) (2pts) Convert the following to assembly:

  if (rax > 10) {
    rdx++;
    rbx = rbx + rdx
  }








4) (3pts) Convert the following to assembly, where 'putc' is a callable function
  prints the character that is in 'al'.  Do not define the putc function, just
  emit code for the below only:

  r15 = 0;
  do {
    al = r15;
    al = al + '0';
    putc(al);
    r15++;
  } while (r15 < 10);
