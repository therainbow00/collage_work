#1 3n, 3 * n, n3, number of excutions of STEP


#2.
for i in range(n):
    for j in range(n):  #j = 0, 1, ..., n - 1
        STEP

#number of excutions of STEP is n^2, n * n

#3. i = n
    whle i > 0:
        i = i//2
        STEP

    n   number of STEPs
2^0 1   1
2^1 2   2
    3   2    [log 3] = 1
2^2 4   3
    7   3    [log 7] = 2
2^3 8   4

ans = [log n] + 1

4. 1 + 2 + 3 ... + n = (n^2 + n) / 2

5. i = 1
   while i < n:
    i *= 2  i = 1, 2, 4, 8
    STEP

     n   number of STEPs
2^0  1   0
2^1  2   1
     3   2      [log 3] = 1
2^2  4   2
     5   3      [log 5] = 2
     6   3
     7   3
2^3  8   3

ans ceil(log n)

floor(2.999) = 2 biggest whole num <=
ceil(2.001)  = 3 smallest whole number >=
ceil(3) = 3

6. i = 1
   s = 0
   while s < n : 0 < 16, 1 < 16, 4 < 16, 9 < 16, 16 < 16xxx
    s += i
    i += 2
    STEP

      n    number of STEP
1^2   1    1
2^2   4    2
      5    3          0 < 5, 1 < 5, 4 < 5, 9 < 5xxx
      8    3          0 < 8, 1 < 8, 4 < 8, 9 < 8xxx
3^2   9    3
4^2  16    4

number of steps = ceil(sqrt(n))

7. 3n

8. (n^2 + n) / 2 repetitions of the k loop
    each time the k loop runs we get n repetitions of STEP

    (n^2 + n) / 2 * n  (n^3 + n^2) / 2
